[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-docker-service = "^0.2.4"
tox = "^4.6.0"

[tool.poetry.group.dev.dependencies]
yapf = "^0"
black = "^23.3.0"
ruff = "^0.0.267"
pre-commit = "^3.6.0"

[tool.tox]
# See https://python-poetry.org/docs/master/faq/#usecase-3
legacy_tox_ini = """
    [tox]
    isolated_build = true
    env_list =
        py311

    [testenv]
    skip_install = true
    allowlist_externals = poetry
    commands_pre = poetry install -v --only=main,test
    commands = poetry run pytest -vx
"""

[tool.poetry]
name = "sqlalchemy-nested-mutable"
version = "0.2.1"
readme = "README.md"
description = "SQLAlchemy Nested Mutable Types."
authors = ["Wonder <wonderbeyond@gmail.com>", "SS <sstorey@bma.bm>"]
license = "MIT"
repository = ""
homepage = ""
documentation = ""
keywords = ["SQLAlchemy", "Nested", "Mutable", "Types", "JSON", "V2"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
packages = [
    { include = "sqlalchemy_nested_mutable" },
]

[tool.poetry.dependencies]
python = "^3.11"
sqlalchemy = "2.0.23"
psycopg2-binary = "^2.8"
pydantic = "^2.5"
typing-extensions = "^4.5.0"
greenlet = "*"
python-dotenv = "^1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
yapf = "*"
pytest = "7.4.3"
pytest-docker-service = "0.2.4"

[tool.semantic_release]
version_variable = [
    "src_folder/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"

[tool.black]
preview = true
skip-string-normalization = true
line-length = 119
target-version = ['py311']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.pytest_cache
    | \.logs
    | \.github
  )/
)
'''

[tool.pytest.ini_options]
addopts = ["-ra -q --pdbcls=IPython.terminal.debugger:TerminalPdb -W ignore::DeprecationWarning --strict-markers --import-mode=importlib"] #
minversion = "6.0"
testpaths = ["tests","."]
markers = [
    "integration: marks as front/backend test (deselect with '-m \"not integration\"')",
    "unit: marks as unit test (deselect with '-m \"not unit\"')",
    ]
pythonpath = "src"
asyncio_mode = "auto"
